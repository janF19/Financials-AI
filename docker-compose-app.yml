volumes:
  redis_data: # For your application's Redis
  # temp_data: # If you were using this named volume
  filebeat_data_backend:
  filebeat_data_worker:
  filebeat_data_frontend:
  filebeat_data_nginx:
  filebeat_data_app_redis:
  metricbeat_data:

networks:
  app-network:
    driver: bridge
  shared_elk_network: # Use the same exact name as defined in docker-compose-elk.yml
    external: true
    # No 'name:' attribute here, because 'shared_elk_network' IS the literal external name.

services:
  # Your Application Redis
  redis:
    image: "redis:alpine"
    container_name: app-redis # Explicit container name
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    labels:
      - "logs.service=app-redis" # Custom label for Filebeat filtering

  # Your Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-backend # Explicit container name
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
      - ./data/temp:/app/backend/temp
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - API_HOST=0.0.0.0
      - TEMP_STORAGE_PATH=/app/backend/temp
    depends_on:
      - redis
    networks:
      - app-network
    labels:
      - "logs.service=backend" # Custom label for Filebeat filtering

  # Your Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-worker # Explicit container name
    command: python -m celery -A backend.celery_app.celery_app worker -l info --pool=solo
    volumes:
      - ./backend:/app/backend
      - ./data/temp:/app/backend/temp
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - TEMP_STORAGE_PATH=/app/backend/temp
    depends_on:
      - redis
    networks:
      - app-network
    labels:
      - "logs.service=worker" # Custom label for Filebeat filtering

  # Your Frontend Service (Vite dev server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: app-frontend-dev # Explicit container name
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network
    labels:
      - "logs.service=frontend" # Custom label for Filebeat filtering

  # Your Nginx Service (Production-like)
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: app-nginx # Explicit container name
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend # Add frontend as a dependency
    networks:
      - app-network
    labels:
      - "logs.service=nginx" # Custom label for Filebeat filtering

  # --- Filebeat Services ---
  filebeat-backend:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat-backend
    user: root # To access Docker socket and logs
    volumes:
      - ./elk/filebeat/config/filebeat-backend.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data_backend:/usr/share/filebeat/data
    command: sh -c "chmod go-w /usr/share/filebeat/filebeat.yml && /usr/local/bin/docker-entrypoint -e"
    networks:
      - app-network        # For discovering app containers via labels
      - shared_elk_network # For sending data to logging-redis on the shared network
    depends_on:
      - backend # Ensure backend is started to log its messages
      # logging-redis is in another compose, so Filebeat needs to handle connection resilience

  filebeat-worker:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat-worker
    user: root
    volumes:
      - ./elk/filebeat/config/filebeat-worker.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data_worker:/usr/share/filebeat/data
    command: sh -c "chmod go-w /usr/share/filebeat/filebeat.yml && /usr/local/bin/docker-entrypoint -e"
    networks:
      - app-network
      - shared_elk_network
    depends_on:
      - worker

  filebeat-frontend:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat-frontend
    user: root
    volumes:
      - ./elk/filebeat/config/filebeat-frontend.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data_frontend:/usr/share/filebeat/data
    command: sh -c "chmod go-w /usr/share/filebeat/filebeat.yml && /usr/local/bin/docker-entrypoint -e"
    networks:
      - app-network
      - shared_elk_network
    depends_on:
      - frontend

  filebeat-nginx:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat-nginx
    user: root
    volumes:
      - ./elk/filebeat/config/filebeat-nginx.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data_nginx:/usr/share/filebeat/data
    command: sh -c "chmod go-w /usr/share/filebeat/filebeat.yml && /usr/local/bin/docker-entrypoint -e"
    networks:
      - app-network
      - shared_elk_network
    depends_on:
      - nginx

  filebeat-app-redis:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat-app-redis
    user: root
    volumes:
      - ./elk/filebeat/config/filebeat-app-redis.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data_app_redis:/usr/share/filebeat/data
    command: sh -c "chmod go-w /usr/share/filebeat/filebeat.yml && /usr/local/bin/docker-entrypoint -e"
    networks:
      - app-network
      - shared_elk_network
    depends_on:
      - redis

  # --- Metricbeat Service ---
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.11.1
    container_name: metricbeat
    user: root # To access host system metrics and Docker socket
    volumes:
      - ./elk/metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - metricbeat_data:/usr/share/metricbeat/data
    networks:
      - app-network        # To connect to app-redis
      - shared_elk_network # To send to elasticsearch
    command: >
      metricbeat -e
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E metricbeat.modules.0.hosts=["app-redis:6379"] # Assuming app-redis is its hostname on app-network 